/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by DCIF CodeGen Version: R2_v2.1.0
* generated on: Wed Oct 30 12:44:55 IST 2019
*/
/**
 * description: This class implements all DiagnosticService Operations
 * author: Akash Jaiswal
 */
#ifndef V0_COM_HARMAN_DIAGNOSTICSERVICE_Diagnostic_Service_PROXY_BASE_HPP_
#define V0_COM_HARMAN_DIAGNOSTICSERVICE_Diagnostic_Service_PROXY_BASE_HPP_

#include <v0/com/harman/diagnosticservice/DiagnosticService.hpp>


#include <v0/com/harman/diagnosticservice/diagTypedefs.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/InputStream.hpp>
#include <CommonAPI/OutputStream.hpp>
#include <cstdint>

#include <CommonAPI/Attribute.hpp>
#include <CommonAPI/Proxy.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v0 {
namespace com {
namespace harman {
namespace diagnosticservice {

class DiagnosticServiceProxyBase
    : virtual public CommonAPI::Proxy {
public:
    typedef CommonAPI::ObservableReadonlyAttribute<::v0::com::harman::diagnosticservice::diagTypedefs::eDiagBTSessionState> DiagEngSessionStatusAttribute;
    typedef CommonAPI::ObservableReadonlyAttribute<::v0::com::harman::diagnosticservice::diagTypedefs::eDiagConnectionState> DiagSWCStatusAttribute;
    typedef CommonAPI::ObservableReadonlyAttribute<::v0::com::harman::diagnosticservice::diagTypedefs::eDiagConnectionState> DiagMICStatusAttribute;
    typedef CommonAPI::ObservableReadonlyAttribute<::v0::com::harman::diagnosticservice::diagTypedefs::eDiagConnectionState> DiagGPSStatusAttribute;
    typedef CommonAPI::ObservableReadonlyAttribute<::v0::com::harman::diagnosticservice::diagTypedefs::eDiagConnectionState> DiagAmFmAntennaStatusAttribute;


    /**
     * description: DiagEngSessionStatus: To emit the BT Auto Pairing request through AME Diagnostic
     */
    virtual DiagEngSessionStatusAttribute& getDiagEngSessionStatusAttribute() = 0;
    /**
     * description: DiagSWCStatus: To emit the Steering Wheel Control connection status
     */
    virtual DiagSWCStatusAttribute& getDiagSWCStatusAttribute() = 0;
    /**
     * description: DiagMICStatus: To emit the MIC connection status
     */
    virtual DiagMICStatusAttribute& getDiagMICStatusAttribute() = 0;
    /**
     * description: DiagGPSStatus: To emit the GPS connection status
     */
    virtual DiagGPSStatusAttribute& getDiagGPSStatusAttribute() = 0;
    /**
     * description: DiagAmFmAntennaStatus: To emit the AM/FM Antenna connection status
     */
    virtual DiagAmFmAntennaStatusAttribute& getDiagAmFmAntennaStatusAttribute() = 0;


};

} // namespace diagnosticservice
} // namespace harman
} // namespace com
} // namespace v0


// Compatibility
namespace v0_1 = v0;

#endif // V0_COM_HARMAN_DIAGNOSTICSERVICE_Diagnostic_Service_PROXY_BASE_HPP_
