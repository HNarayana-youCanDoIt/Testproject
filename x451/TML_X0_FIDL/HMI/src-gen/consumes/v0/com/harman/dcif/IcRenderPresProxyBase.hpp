/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by DCIF CodeGen Version: R2_v2.1.0
* generated on: Wed Oct 30 12:44:55 IST 2019
*/
#ifndef V0_COM_HARMAN_DCIF_Ic_Render_Pres_PROXY_BASE_HPP_
#define V0_COM_HARMAN_DCIF_Ic_Render_Pres_PROXY_BASE_HPP_

#include <v0/com/harman/dcif/IcRenderPres.hpp>


#include <v0/com/harman/dcif/IcRenderPresTypes.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/InputStream.hpp>
#include <CommonAPI/OutputStream.hpp>
#include <cstdint>
#include <vector>

#include <CommonAPI/Proxy.hpp>
#include <functional>
#include <future>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v0 {
namespace com {
namespace harman {
namespace dcif {

class IcRenderPresProxyBase
    : virtual public CommonAPI::Proxy {
public:

    typedef std::function<void(const CommonAPI::CallStatus&)> SetIcRenderCastAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&, const bool&)> GetIcRenderCastAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&)> SetIcColorThemeAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&)> SetIcRenderPhoneCallStateAsyncCallback;
    typedef std::function<void(const CommonAPI::CallStatus&)> SetIcRenderSmsRxIndicationAsyncCallback;



    virtual void setIcRenderCast(const ::v0::com::harman::dcif::IcRenderPresTypes::eIcRenderCast &_icRenderCast_enum, const bool &_icRenderCast_value, CommonAPI::CallStatus &_internalCallStatus, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> setIcRenderCastAsync(const ::v0::com::harman::dcif::IcRenderPresTypes::eIcRenderCast &_icRenderCast_enum, const bool &_icRenderCast_value, SetIcRenderCastAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void getIcRenderCast(const ::v0::com::harman::dcif::IcRenderPresTypes::eIcRenderCast &_icRenderCast_enum, CommonAPI::CallStatus &_internalCallStatus, bool &_icRenderCast_value, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> getIcRenderCastAsync(const ::v0::com::harman::dcif::IcRenderPresTypes::eIcRenderCast &_icRenderCast_enum, GetIcRenderCastAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void setIcColorTheme(const ::v0::com::harman::dcif::IcRenderPresTypes::eIcColorStatus_enum &_icColorTheme, CommonAPI::CallStatus &_internalCallStatus, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> setIcColorThemeAsync(const ::v0::com::harman::dcif::IcRenderPresTypes::eIcColorStatus_enum &_icColorTheme, SetIcColorThemeAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void setIcRenderPhoneCallState(const ::v0::com::harman::dcif::IcRenderPresTypes::eIcRenderCallState &_icCallState_enum, const std::string &_icContactNameNum, const int8_t &_icCallId, CommonAPI::CallStatus &_internalCallStatus, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> setIcRenderPhoneCallStateAsync(const ::v0::com::harman::dcif::IcRenderPresTypes::eIcRenderCallState &_icCallState_enum, const std::string &_icContactNameNum, const int8_t &_icCallId, SetIcRenderPhoneCallStateAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual void setIcRenderSmsRxIndication(const bool &_icSmsIndicationFlag, const std::string &_icContactNameNum, CommonAPI::CallStatus &_internalCallStatus, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> setIcRenderSmsRxIndicationAsync(const bool &_icSmsIndicationFlag, const std::string &_icContactNameNum, SetIcRenderSmsRxIndicationAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
};

} // namespace dcif
} // namespace harman
} // namespace com
} // namespace v0


// Compatibility
namespace v0_1 = v0;

#endif // V0_COM_HARMAN_DCIF_Ic_Render_Pres_PROXY_BASE_HPP_
