/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by DCIF CodeGen Version: R2_v2.1.0
* generated on: Wed Oct 30 12:44:55 IST 2019
*/
/**
 * description: The VersionManager component is responsible for gathering version information
 *   of the different modules as well as managing     a set of required version for
 *   a certain release, the release configuration that is defined at integration
 *   time.          Version: 1.0     Reason:         - Initial Version     Changes:
 *           1. readonly attributes: allVersionsDetails         2. methods:
 *   getVersionDetails, get16RPartNumber         3. signal : versionMismatch
 * author: Gaurav Garg
 */
#ifndef V0_COM_HARMAN_DCIF_VERSION_MANAGER_SERVICE__TATA_HPP_
#define V0_COM_HARMAN_DCIF_VERSION_MANAGER_SERVICE__TATA_HPP_




#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/Types.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v0 {
namespace com {
namespace harman {
namespace dcif {

class VersionManagerService_TATA {
public:
    virtual ~VersionManagerService_TATA() { }

    static inline const char* getInterface();
    static inline CommonAPI::Version getInterfaceVersion();
};

const char* VersionManagerService_TATA::getInterface() {
    return ("com.harman.dcif.VersionManagerService_TATA");
}

CommonAPI::Version VersionManagerService_TATA::getInterfaceVersion() {
    return CommonAPI::Version(0, 1);
}


} // namespace dcif
} // namespace harman
} // namespace com
} // namespace v0

namespace CommonAPI {
}


// Compatibility
namespace v0_1 = v0;

#endif // V0_COM_HARMAN_DCIF_VERSION_MANAGER_SERVICE__TATA_HPP_
