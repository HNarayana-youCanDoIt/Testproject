/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by DCIF CodeGen Version: R2_v2.1.0
* generated on: Wed Oct 30 12:44:55 IST 2019
*/
#ifndef V0_COM_HARMAN_KEYPRES_Key_Pres_Plugin_DBUS_PROXY_HPP_
#define V0_COM_HARMAN_KEYPRES_Key_Pres_Plugin_DBUS_PROXY_HPP_

#include <v0/com/harman/keypres/KeyPresPluginProxyBase.hpp>
#include "v0/com/harman/keypres/KeyPresPluginDBusDeployment.hpp"

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/DBus/DBusAddress.hpp>
#include <CommonAPI/DBus/DBusFactory.hpp>
#include <CommonAPI/DBus/DBusProxy.hpp>
#include <CommonAPI/DBus/DBusAddressTranslator.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

#include <string>

namespace v0 {
namespace com {
namespace harman {
namespace keypres {

class KeyPresPluginDBusProxy
    : virtual public KeyPresPluginProxyBase, 
      virtual public CommonAPI::DBus::DBusProxy {
public:
    KeyPresPluginDBusProxy(
        const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection);

    virtual ~KeyPresPluginDBusProxy() { }



    /**
     * description: This method will send the keycode received from HMI 	Input :  KeyCodeID,
     *   KeyState
     */
    virtual void sendKeyCode(const KeyPresPlugin::eKeyCodeId &_keyCode, const KeyPresPlugin::eKeyState &_keystate, CommonAPI::CallStatus &_internalCallStatus);
    /**
     * description: This method will send the the volume slider state 	Input :  KeyCodeID,
     *   KeyState, steps 	Output : result
     */
    virtual void sendSliderState(const KeyPresPlugin::eKeyCodeId &_keyCode, const KeyPresPlugin::eKeyState &_keystate, const int16_t &_steps, CommonAPI::CallStatus &_internalCallStatus, KeyPresPlugin::eCallResult &_result, const CommonAPI::CallInfo *_info);
    virtual std::future<CommonAPI::CallStatus> sendSliderStateAsync(const KeyPresPlugin::eKeyCodeId &_keyCode, const KeyPresPlugin::eKeyState &_keystate, const int16_t &_steps, SendSliderStateAsyncCallback _callback, const CommonAPI::CallInfo *_info);


    virtual void getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const;

private:
   


};

} // namespace keypres
} // namespace harman
} // namespace com
} // namespace v0

#endif // V0_COM_HARMAN_KEYPRES_Key_Pres_Plugin_DBUS_PROXY_HPP_

