/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by DCIF CodeGen Version: R2_v2.1.0
* generated on: Wed Oct 30 12:44:55 IST 2019
*/
#include <v0/com/harman/ParkAssist/PDCServiceDBusProxy.hpp>

namespace v0 {
namespace com {
namespace harman {
namespace ParkAssist {

std::shared_ptr<CommonAPI::DBus::DBusProxy> createPDCServiceDBusProxy(
	const CommonAPI::DBus::DBusAddress &_address,
	const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection) {
	return std::make_shared<PDCServiceDBusProxy>(_address, _connection);
}

INITIALIZER(registerPDCServiceDBusProxy) {
     CommonAPI::DBus::Factory::get()->registerProxyCreateMethod(
		PDCService::getInterface(),
		&createPDCServiceDBusProxy);
}

PDCServiceDBusProxy::PDCServiceDBusProxy(
	const CommonAPI::DBus::DBusAddress &_address,
	const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection)
	:	CommonAPI::DBus::DBusProxy(_address, _connection)
,		rvcFault_(*this, "onRvcFaultAttributeChanged", "i", "getRvcFaultAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		pdc_rvcFault_(*this, "onPdc_rvcFaultAttributeChanged", "i", "getPdc_rvcFaultAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		rvcOverlayType_(*this, "onRvcOverlayTypeAttributeChanged", "i", "getRvcOverlayTypeAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		hmiNotification_(*this, "onHmiNotificationAttributeChanged", "setHmiNotificationAttribute", "b", "getHmiNotificationAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		rvcBackCamera_(*this, "onRvcBackCameraAttributeChanged", "setRvcBackCameraAttribute", "b", "getRvcBackCameraAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		reverseGearStatus_(*this, "onReverseGearStatusAttributeChanged", "(bb)", "getReverseGearStatusAttribute", static_cast<::v1::com::harman::ParkAssist::ParkAssistBaseType_::reverseStatusDeployment_t*>(nullptr)),
		pdcPresence_en_(*this, "onPdcPresence_enAttributeChanged", "setPdcPresence_enAttribute", "i", "getPdcPresence_enAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		audioZoneState_(*this, "onAudioZoneStateAttributeChanged", "i", "getAudioZoneStateAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		tailgateStateStatus_enum_(*this, "onTailgateStateStatus_enumAttributeChanged", "i", "getTailgateStateStatus_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		revGearStatus_enum_(*this, "onRevGearStatus_enumAttributeChanged", "i", "getRevGearStatus_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		pDcHuProxRearSensState_(*this, "onPDcHuProxRearSensStateAttributeChanged", "q", "getPDcHuProxRearSensStateAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		parkBrkState_enum_(*this, "onParkBrkState_enumAttributeChanged", "i", "getParkBrkState_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		pDcHuFaultState_enum_(*this, "onPDcHuFaultState_enumAttributeChanged", "i", "getPDcHuFaultState_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		pDcHuAudioZoneState_enum_(*this, "onPDcHuAudioZoneState_enumAttributeChanged", "i", "getPDcHuAudioZoneState_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		pDcHuVisualZoneRearSensState_(*this, "onPDcHuVisualZoneRearSensStateAttributeChanged", "u", "getPDcHuVisualZoneRearSensStateAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		pDcVariant_enum_(*this, "onPDcVariant_enumAttributeChanged", "i", "getPDcVariant_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		pDcHuRearTone_enum_(*this, "onPDcHuRearTone_enumAttributeChanged", "i", "getPDcHuRearTone_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		pDcHuRearNoOfSen_enum_(*this, "onPDcHuRearNoOfSen_enumAttributeChanged", "i", "getPDcHuRearNoOfSen_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		sAsAngEPAS_(*this, "onSAsAngEPASAttributeChanged", "d", "getSAsAngEPASAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		sAsAngEPAsDir_enum_(*this, "onSAsAngEPAsDir_enumAttributeChanged", "i", "getSAsAngEPAsDir_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		pDcRearToneReq_enum_(*this, "onPDcRearToneReq_enumAttributeChanged", "setPDcRearToneReq_enumAttribute", "i", "getPDcRearToneReq_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		huPDcReqType_enum_(*this, "onHuPDcReqType_enumAttributeChanged", "setHuPDcReqType_enumAttribute", "i", "getHuPDcReqType_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		pDcOnDelayTimer_(*this, "onPDcOnDelayTimerAttributeChanged", "setPDcOnDelayTimerAttribute", "y", "getPDcOnDelayTimerAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		pDcToneVolume_(*this, "onPDcToneVolumeAttributeChanged", "setPDcToneVolumeAttribute", "y", "getPDcToneVolumeAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		rvcBrightness_(*this, "onRvcBrightnessAttributeChanged", "setRvcBrightnessAttribute", "y", "getRvcBrightnessAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		rvcContrast_(*this, "onRvcContrastAttributeChanged", "setRvcContrastAttribute", "y", "getRvcContrastAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		rvcColorSaturation_(*this, "onRvcColorSaturationAttributeChanged", "setRvcColorSaturationAttribute", "y", "getRvcColorSaturationAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		rvcGama_(*this, "onRvcGamaAttributeChanged", "setRvcGamaAttribute", "y", "getRvcGamaAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		pdcsettingUpdate_(*this, "onPdcsettingUpdateAttributeChanged", "setPdcsettingUpdateAttribute", "(by)", "getPdcsettingUpdateAttribute", static_cast<::v1::com::harman::ParkAssist::ParkAssistBaseType_::pdcsettingErrorUpdateDeployment_t*>(nullptr)),
		parkAssistVariant_enum_(*this, "onParkAssistVariant_enumAttributeChanged", "setParkAssistVariant_enumAttribute", "i", "getParkAssistVariant_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr))
{
}

      PDCServiceDBusProxy::RvcFaultAttribute& PDCServiceDBusProxy::getRvcFaultAttribute() {
          return rvcFault_;
      }
      PDCServiceDBusProxy::Pdc_rvcFaultAttribute& PDCServiceDBusProxy::getPdc_rvcFaultAttribute() {
          return pdc_rvcFault_;
      }
      PDCServiceDBusProxy::RvcOverlayTypeAttribute& PDCServiceDBusProxy::getRvcOverlayTypeAttribute() {
          return rvcOverlayType_;
      }
      PDCServiceDBusProxy::HmiNotificationAttribute& PDCServiceDBusProxy::getHmiNotificationAttribute() {
          return hmiNotification_;
      }
      PDCServiceDBusProxy::RvcBackCameraAttribute& PDCServiceDBusProxy::getRvcBackCameraAttribute() {
          return rvcBackCamera_;
      }
      PDCServiceDBusProxy::ReverseGearStatusAttribute& PDCServiceDBusProxy::getReverseGearStatusAttribute() {
          return reverseGearStatus_;
      }
      PDCServiceDBusProxy::PdcPresence_enAttribute& PDCServiceDBusProxy::getPdcPresence_enAttribute() {
          return pdcPresence_en_;
      }
      PDCServiceDBusProxy::AudioZoneStateAttribute& PDCServiceDBusProxy::getAudioZoneStateAttribute() {
          return audioZoneState_;
      }
      PDCServiceDBusProxy::TailgateStateStatus_enumAttribute& PDCServiceDBusProxy::getTailgateStateStatus_enumAttribute() {
          return tailgateStateStatus_enum_;
      }
      PDCServiceDBusProxy::RevGearStatus_enumAttribute& PDCServiceDBusProxy::getRevGearStatus_enumAttribute() {
          return revGearStatus_enum_;
      }
      PDCServiceDBusProxy::PDcHuProxRearSensStateAttribute& PDCServiceDBusProxy::getPDcHuProxRearSensStateAttribute() {
          return pDcHuProxRearSensState_;
      }
      PDCServiceDBusProxy::ParkBrkState_enumAttribute& PDCServiceDBusProxy::getParkBrkState_enumAttribute() {
          return parkBrkState_enum_;
      }
      PDCServiceDBusProxy::PDcHuFaultState_enumAttribute& PDCServiceDBusProxy::getPDcHuFaultState_enumAttribute() {
          return pDcHuFaultState_enum_;
      }
      PDCServiceDBusProxy::PDcHuAudioZoneState_enumAttribute& PDCServiceDBusProxy::getPDcHuAudioZoneState_enumAttribute() {
          return pDcHuAudioZoneState_enum_;
      }
      PDCServiceDBusProxy::PDcHuVisualZoneRearSensStateAttribute& PDCServiceDBusProxy::getPDcHuVisualZoneRearSensStateAttribute() {
          return pDcHuVisualZoneRearSensState_;
      }
      PDCServiceDBusProxy::PDcVariant_enumAttribute& PDCServiceDBusProxy::getPDcVariant_enumAttribute() {
          return pDcVariant_enum_;
      }
      PDCServiceDBusProxy::PDcHuRearTone_enumAttribute& PDCServiceDBusProxy::getPDcHuRearTone_enumAttribute() {
          return pDcHuRearTone_enum_;
      }
      PDCServiceDBusProxy::PDcHuRearNoOfSen_enumAttribute& PDCServiceDBusProxy::getPDcHuRearNoOfSen_enumAttribute() {
          return pDcHuRearNoOfSen_enum_;
      }
      PDCServiceDBusProxy::SAsAngEPASAttribute& PDCServiceDBusProxy::getSAsAngEPASAttribute() {
          return sAsAngEPAS_;
      }
      PDCServiceDBusProxy::SAsAngEPAsDir_enumAttribute& PDCServiceDBusProxy::getSAsAngEPAsDir_enumAttribute() {
          return sAsAngEPAsDir_enum_;
      }
      PDCServiceDBusProxy::PDcRearToneReq_enumAttribute& PDCServiceDBusProxy::getPDcRearToneReq_enumAttribute() {
          return pDcRearToneReq_enum_;
      }
      PDCServiceDBusProxy::HuPDcReqType_enumAttribute& PDCServiceDBusProxy::getHuPDcReqType_enumAttribute() {
          return huPDcReqType_enum_;
      }
      PDCServiceDBusProxy::PDcOnDelayTimerAttribute& PDCServiceDBusProxy::getPDcOnDelayTimerAttribute() {
          return pDcOnDelayTimer_;
      }
      PDCServiceDBusProxy::PDcToneVolumeAttribute& PDCServiceDBusProxy::getPDcToneVolumeAttribute() {
          return pDcToneVolume_;
      }
      PDCServiceDBusProxy::RvcBrightnessAttribute& PDCServiceDBusProxy::getRvcBrightnessAttribute() {
          return rvcBrightness_;
      }
      PDCServiceDBusProxy::RvcContrastAttribute& PDCServiceDBusProxy::getRvcContrastAttribute() {
          return rvcContrast_;
      }
      PDCServiceDBusProxy::RvcColorSaturationAttribute& PDCServiceDBusProxy::getRvcColorSaturationAttribute() {
          return rvcColorSaturation_;
      }
      PDCServiceDBusProxy::RvcGamaAttribute& PDCServiceDBusProxy::getRvcGamaAttribute() {
          return rvcGama_;
      }
      PDCServiceDBusProxy::PdcsettingUpdateAttribute& PDCServiceDBusProxy::getPdcsettingUpdateAttribute() {
          return pdcsettingUpdate_;
      }
      PDCServiceDBusProxy::ParkAssistVariant_enumAttribute& PDCServiceDBusProxy::getParkAssistVariant_enumAttribute() {
          return parkAssistVariant_enum_;
      }

    
    /**
     * description: This method is used to reset pdc setting
     */
    void PDCServiceDBusProxy::ParkFactoryReset(const uint16_t &_type, CommonAPI::CallStatus &_internalCallStatus, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint16_t, CommonAPI::EmptyDeployment> deploy_type(_type, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint16_t, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethodWithReply(
        *this,
        "ParkFactoryReset",
        "q",
(_info ? _info : &CommonAPI::DBus::defaultCallInfo),
deploy_type,
_internalCallStatus);
}
    std::future<CommonAPI::CallStatus> PDCServiceDBusProxy::ParkFactoryResetAsync(const uint16_t &_type, ParkFactoryResetAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint16_t, CommonAPI::EmptyDeployment> deploy_type(_type, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        return CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint16_t, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethodAsync(
        *this,
        "ParkFactoryReset",
        "q",
        (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
        deploy_type,
        [_callback] (CommonAPI::CallStatus _internalCallStatus) {
        	if (_callback)
        		_callback(_internalCallStatus);
        },
        std::make_tuple());
    }


void PDCServiceDBusProxy::getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const {
          ownVersionMajor = 0;
          ownVersionMinor = 1;
      }

      } // namespace ParkAssist
      } // namespace harman
      } // namespace com
      } // namespace v0
