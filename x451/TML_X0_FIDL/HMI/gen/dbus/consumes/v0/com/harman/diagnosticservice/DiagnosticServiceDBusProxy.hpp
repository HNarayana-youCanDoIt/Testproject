/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by DCIF CodeGen Version: R2_v2.1.0
* generated on: Wed Oct 30 12:44:55 IST 2019
*/
/**
 * description: This class implements all DiagnosticService Operations
 * author: Akash Jaiswal
 */
#ifndef V0_COM_HARMAN_DIAGNOSTICSERVICE_Diagnostic_Service_DBUS_PROXY_HPP_
#define V0_COM_HARMAN_DIAGNOSTICSERVICE_Diagnostic_Service_DBUS_PROXY_HPP_

#include <v0/com/harman/diagnosticservice/DiagnosticServiceProxyBase.hpp>
#include "v0/com/harman/diagnosticservice/DiagnosticServiceDBusDeployment.hpp"

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/DBus/DBusAddress.hpp>
#include <CommonAPI/DBus/DBusFactory.hpp>
#include <CommonAPI/DBus/DBusProxy.hpp>
#include <CommonAPI/DBus/DBusAddressTranslator.hpp>
#include <CommonAPI/DBus/DBusAttribute.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

#include <string>

namespace v0 {
namespace com {
namespace harman {
namespace diagnosticservice {

class DiagnosticServiceDBusProxy
    : virtual public DiagnosticServiceProxyBase, 
      virtual public CommonAPI::DBus::DBusProxy {
public:
    DiagnosticServiceDBusProxy(
        const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection);

    virtual ~DiagnosticServiceDBusProxy() { }

    virtual DiagEngSessionStatusAttribute& getDiagEngSessionStatusAttribute();
    virtual DiagSWCStatusAttribute& getDiagSWCStatusAttribute();
    virtual DiagMICStatusAttribute& getDiagMICStatusAttribute();
    virtual DiagGPSStatusAttribute& getDiagGPSStatusAttribute();
    virtual DiagAmFmAntennaStatusAttribute& getDiagAmFmAntennaStatusAttribute();




    virtual void getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const;

private:
   
    class DBusdiagEngSessionStatus_Attribute : public CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusReadonlyAttribute<DiagEngSessionStatusAttribute>> {
    public:
    template <typename... _A>
    	DBusdiagEngSessionStatus_Attribute(DBusProxy &_proxy,
    		_A ... arguments)
    		: CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusReadonlyAttribute<DiagEngSessionStatusAttribute>>(
    			_proxy, arguments...) {}
    };
    DBusdiagEngSessionStatus_Attribute diagEngSessionStatus_;
    class DBusdiagSWCStatus_Attribute : public CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusReadonlyAttribute<DiagSWCStatusAttribute>> {
    public:
    template <typename... _A>
    	DBusdiagSWCStatus_Attribute(DBusProxy &_proxy,
    		_A ... arguments)
    		: CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusReadonlyAttribute<DiagSWCStatusAttribute>>(
    			_proxy, arguments...) {}
    };
    DBusdiagSWCStatus_Attribute diagSWCStatus_;
    class DBusdiagMICStatus_Attribute : public CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusReadonlyAttribute<DiagMICStatusAttribute>> {
    public:
    template <typename... _A>
    	DBusdiagMICStatus_Attribute(DBusProxy &_proxy,
    		_A ... arguments)
    		: CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusReadonlyAttribute<DiagMICStatusAttribute>>(
    			_proxy, arguments...) {}
    };
    DBusdiagMICStatus_Attribute diagMICStatus_;
    class DBusdiagGPSStatus_Attribute : public CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusReadonlyAttribute<DiagGPSStatusAttribute>> {
    public:
    template <typename... _A>
    	DBusdiagGPSStatus_Attribute(DBusProxy &_proxy,
    		_A ... arguments)
    		: CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusReadonlyAttribute<DiagGPSStatusAttribute>>(
    			_proxy, arguments...) {}
    };
    DBusdiagGPSStatus_Attribute diagGPSStatus_;
    class DBusdiagAmFmAntennaStatus_Attribute : public CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusReadonlyAttribute<DiagAmFmAntennaStatusAttribute>> {
    public:
    template <typename... _A>
    	DBusdiagAmFmAntennaStatus_Attribute(DBusProxy &_proxy,
    		_A ... arguments)
    		: CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusReadonlyAttribute<DiagAmFmAntennaStatusAttribute>>(
    			_proxy, arguments...) {}
    };
    DBusdiagAmFmAntennaStatus_Attribute diagAmFmAntennaStatus_;


};

} // namespace diagnosticservice
} // namespace harman
} // namespace com
} // namespace v0

#endif // V0_COM_HARMAN_DIAGNOSTICSERVICE_Diagnostic_Service_DBUS_PROXY_HPP_

