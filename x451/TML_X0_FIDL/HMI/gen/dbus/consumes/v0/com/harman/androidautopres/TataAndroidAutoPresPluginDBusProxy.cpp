/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by DCIF CodeGen Version: R2_v2.1.0
* generated on: Wed Oct 30 12:44:55 IST 2019
*/
#include <v0/com/harman/androidautopres/TataAndroidAutoPresPluginDBusProxy.hpp>

namespace v0 {
namespace com {
namespace harman {
namespace androidautopres {

std::shared_ptr<CommonAPI::DBus::DBusProxy> createTataAndroidAutoPresPluginDBusProxy(
	const CommonAPI::DBus::DBusAddress &_address,
	const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection) {
	return std::make_shared<TataAndroidAutoPresPluginDBusProxy>(_address, _connection);
}

INITIALIZER(registerTataAndroidAutoPresPluginDBusProxy) {
     CommonAPI::DBus::Factory::get()->registerProxyCreateMethod(
		TataAndroidAutoPresPlugin::getInterface(),
		&createTataAndroidAutoPresPluginDBusProxy);
}

TataAndroidAutoPresPluginDBusProxy::TataAndroidAutoPresPluginDBusProxy(
	const CommonAPI::DBus::DBusAddress &_address,
	const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection)
	:	CommonAPI::DBus::DBusProxy(_address, _connection)
,		functionOwner_(*this, "onFunctionOwnerAttributeChanged", "setFunctionOwnerAttribute", "(iiii)", "getFunctionOwnerAttribute", static_cast<TataAndroidAutoPresPlugin_::HuFunctionsDeployment_t*>(nullptr)),
		screenOwner_(*this, "onScreenOwnerAttributeChanged", "setScreenOwnerAttribute", "i", "getScreenOwnerAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		naviOwner_(*this, "onNaviOwnerAttributeChanged", "setNaviOwnerAttribute", "i", "getNaviOwnerAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		speechOwner_(*this, "onSpeechOwnerAttributeChanged", "setSpeechOwnerAttribute", "i", "getSpeechOwnerAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr))
,		firstConnShowPopup_(*this, "firstConnShowPopup", "y", std::make_tuple(static_cast<CommonAPI::EmptyDeployment*>(nullptr)))
{
}

      TataAndroidAutoPresPluginDBusProxy::FunctionOwnerAttribute& TataAndroidAutoPresPluginDBusProxy::getFunctionOwnerAttribute() {
          return functionOwner_;
      }
      TataAndroidAutoPresPluginDBusProxy::ScreenOwnerAttribute& TataAndroidAutoPresPluginDBusProxy::getScreenOwnerAttribute() {
          return screenOwner_;
      }
      TataAndroidAutoPresPluginDBusProxy::NaviOwnerAttribute& TataAndroidAutoPresPluginDBusProxy::getNaviOwnerAttribute() {
          return naviOwner_;
      }
      TataAndroidAutoPresPluginDBusProxy::SpeechOwnerAttribute& TataAndroidAutoPresPluginDBusProxy::getSpeechOwnerAttribute() {
          return speechOwner_;
      }

TataAndroidAutoPresPluginDBusProxy::FirstConnShowPopupEvent& TataAndroidAutoPresPluginDBusProxy::getFirstConnShowPopupEvent() {
    return firstConnShowPopup_;
}
    
    void TataAndroidAutoPresPluginDBusProxy::reportKeyEvent(const uint32_t &_KeyCode, const uint32_t &_KeyStatus, CommonAPI::CallStatus &_internalCallStatus, uint8_t &_result, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint32_t, CommonAPI::EmptyDeployment> deploy_KeyCode(_KeyCode, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::Deployable<uint32_t, CommonAPI::EmptyDeployment> deploy_KeyStatus(_KeyStatus, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint32_t, CommonAPI::EmptyDeployment >,
            CommonAPI::Deployable<uint32_t, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodWithReply(
        *this,
        "reportKeyEvent",
        "uu",
(_info ? _info : &CommonAPI::DBus::defaultCallInfo),
deploy_KeyCode, deploy_KeyStatus,
_internalCallStatus,
deploy_result);
_result = deploy_result.getValue();
}
    std::future<CommonAPI::CallStatus> TataAndroidAutoPresPluginDBusProxy::reportKeyEventAsync(const uint32_t &_KeyCode, const uint32_t &_KeyStatus, ReportKeyEventAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint32_t, CommonAPI::EmptyDeployment> deploy_KeyCode(_KeyCode, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::Deployable<uint32_t, CommonAPI::EmptyDeployment> deploy_KeyStatus(_KeyStatus, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        return CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint32_t, CommonAPI::EmptyDeployment >,
            CommonAPI::Deployable<uint32_t, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodAsync(
        *this,
        "reportKeyEvent",
        "uu",
        (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
        deploy_KeyCode, deploy_KeyStatus,
        [_callback] (CommonAPI::CallStatus _internalCallStatus, CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> _result) {
        	if (_callback)
        		_callback(_internalCallStatus, _result.getValue());
        },
        std::make_tuple(deploy_result));
    }
    void TataAndroidAutoPresPluginDBusProxy::playAapMedia(CommonAPI::CallStatus &_internalCallStatus, uint8_t &_result, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodWithReply(
        *this,
        "playAapMedia",
        "",
(_info ? _info : &CommonAPI::DBus::defaultCallInfo),
_internalCallStatus,
deploy_result);
_result = deploy_result.getValue();
}
    std::future<CommonAPI::CallStatus> TataAndroidAutoPresPluginDBusProxy::playAapMediaAsync(PlayAapMediaAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        return CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodAsync(
        *this,
        "playAapMedia",
        "",
        (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
        [_callback] (CommonAPI::CallStatus _internalCallStatus, CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> _result) {
        	if (_callback)
        		_callback(_internalCallStatus, _result.getValue());
        },
        std::make_tuple(deploy_result));
    }
    void TataAndroidAutoPresPluginDBusProxy::pauseAapMedia(CommonAPI::CallStatus &_internalCallStatus, uint8_t &_result, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodWithReply(
        *this,
        "pauseAapMedia",
        "",
(_info ? _info : &CommonAPI::DBus::defaultCallInfo),
_internalCallStatus,
deploy_result);
_result = deploy_result.getValue();
}
    std::future<CommonAPI::CallStatus> TataAndroidAutoPresPluginDBusProxy::pauseAapMediaAsync(PauseAapMediaAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        return CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodAsync(
        *this,
        "pauseAapMedia",
        "",
        (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
        [_callback] (CommonAPI::CallStatus _internalCallStatus, CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> _result) {
        	if (_callback)
        		_callback(_internalCallStatus, _result.getValue());
        },
        std::make_tuple(deploy_result));
    }
    void TataAndroidAutoPresPluginDBusProxy::toggleAapMedia(CommonAPI::CallStatus &_internalCallStatus, uint8_t &_result, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodWithReply(
        *this,
        "toggleAapMedia",
        "",
(_info ? _info : &CommonAPI::DBus::defaultCallInfo),
_internalCallStatus,
deploy_result);
_result = deploy_result.getValue();
}
    std::future<CommonAPI::CallStatus> TataAndroidAutoPresPluginDBusProxy::toggleAapMediaAsync(ToggleAapMediaAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        return CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodAsync(
        *this,
        "toggleAapMedia",
        "",
        (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
        [_callback] (CommonAPI::CallStatus _internalCallStatus, CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> _result) {
        	if (_callback)
        		_callback(_internalCallStatus, _result.getValue());
        },
        std::make_tuple(deploy_result));
    }
    /**
     * description: This method is called by Engineering Menu service for factory reset.        
     *   	return: true - Success 		    false - Not successful
     */
    void TataAndroidAutoPresPluginDBusProxy::AaFactoryReset(CommonAPI::CallStatus &_internalCallStatus, uint8_t &_result, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodWithReply(
        *this,
        "AaFactoryReset",
        "",
(_info ? _info : &CommonAPI::DBus::defaultCallInfo),
_internalCallStatus,
deploy_result);
_result = deploy_result.getValue();
}
    std::future<CommonAPI::CallStatus> TataAndroidAutoPresPluginDBusProxy::AaFactoryResetAsync(AaFactoryResetAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        return CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodAsync(
        *this,
        "AaFactoryReset",
        "",
        (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
        [_callback] (CommonAPI::CallStatus _internalCallStatus, CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> _result) {
        	if (_callback)
        		_callback(_internalCallStatus, _result.getValue());
        },
        std::make_tuple(deploy_result));
    }
    /**
     * description: This method is called by HMI to changed the song to Next.         	return: true
     *   - Success 		    false - Not successful
     */
    void TataAndroidAutoPresPluginDBusProxy::AapMediaNext(CommonAPI::CallStatus &_internalCallStatus, uint8_t &_result, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodWithReply(
        *this,
        "AapMediaNext",
        "",
(_info ? _info : &CommonAPI::DBus::defaultCallInfo),
_internalCallStatus,
deploy_result);
_result = deploy_result.getValue();
}
    std::future<CommonAPI::CallStatus> TataAndroidAutoPresPluginDBusProxy::AapMediaNextAsync(AapMediaNextAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        return CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodAsync(
        *this,
        "AapMediaNext",
        "",
        (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
        [_callback] (CommonAPI::CallStatus _internalCallStatus, CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> _result) {
        	if (_callback)
        		_callback(_internalCallStatus, _result.getValue());
        },
        std::make_tuple(deploy_result));
    }
    /**
     * description: This method is called by HMI to changed the song to Previous.          
     *   	return: true - Success 		    false - Not successful
     */
    void TataAndroidAutoPresPluginDBusProxy::AapMediaPrevious(CommonAPI::CallStatus &_internalCallStatus, uint8_t &_result, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodWithReply(
        *this,
        "AapMediaPrevious",
        "",
(_info ? _info : &CommonAPI::DBus::defaultCallInfo),
_internalCallStatus,
deploy_result);
_result = deploy_result.getValue();
}
    std::future<CommonAPI::CallStatus> TataAndroidAutoPresPluginDBusProxy::AapMediaPreviousAsync(AapMediaPreviousAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        return CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodAsync(
        *this,
        "AapMediaPrevious",
        "",
        (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
        [_callback] (CommonAPI::CallStatus _internalCallStatus, CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> _result) {
        	if (_callback)
        		_callback(_internalCallStatus, _result.getValue());
        },
        std::make_tuple(deploy_result));
    }
    void TataAndroidAutoPresPluginDBusProxy::getFunctionOwnerStruct(CommonAPI::CallStatus &_internalCallStatus, TataAndroidAutoPresPlugin::HuFunctions &_result, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<TataAndroidAutoPresPlugin::HuFunctions, TataAndroidAutoPresPlugin_::HuFunctionsDeployment_t> deploy_result(static_cast<TataAndroidAutoPresPlugin_::HuFunctionsDeployment_t*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<TataAndroidAutoPresPlugin::HuFunctions,TataAndroidAutoPresPlugin_::HuFunctionsDeployment_t>
            >
        	>::callMethodWithReply(
        *this,
        "getFunctionOwnerStruct",
        "",
(_info ? _info : &CommonAPI::DBus::defaultCallInfo),
_internalCallStatus,
deploy_result);
_result = deploy_result.getValue();
}
    std::future<CommonAPI::CallStatus> TataAndroidAutoPresPluginDBusProxy::getFunctionOwnerStructAsync(GetFunctionOwnerStructAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<TataAndroidAutoPresPlugin::HuFunctions, TataAndroidAutoPresPlugin_::HuFunctionsDeployment_t> deploy_result(static_cast<TataAndroidAutoPresPlugin_::HuFunctionsDeployment_t*>(nullptr));
        return CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<TataAndroidAutoPresPlugin::HuFunctions,TataAndroidAutoPresPlugin_::HuFunctionsDeployment_t>
            >
        	>::callMethodAsync(
        *this,
        "getFunctionOwnerStruct",
        "",
        (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
        [_callback] (CommonAPI::CallStatus _internalCallStatus, CommonAPI::Deployable<TataAndroidAutoPresPlugin::HuFunctions, TataAndroidAutoPresPlugin_::HuFunctionsDeployment_t> _result) {
        	if (_callback)
        		_callback(_internalCallStatus, _result.getValue());
        },
        std::make_tuple(deploy_result));
    }
    /**
     * description: This method is called by HMI to get the current screen owner.          
     *   	return: OwnerType
     */
    void TataAndroidAutoPresPluginDBusProxy::getScreenOwner(CommonAPI::CallStatus &_internalCallStatus, TataAndroidAutoPresPlugin::OwnerType &_result, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType,CommonAPI::EmptyDeployment>
            >
        	>::callMethodWithReply(
        *this,
        "getScreenOwner",
        "",
(_info ? _info : &CommonAPI::DBus::defaultCallInfo),
_internalCallStatus,
deploy_result);
_result = deploy_result.getValue();
}
    std::future<CommonAPI::CallStatus> TataAndroidAutoPresPluginDBusProxy::getScreenOwnerAsync(GetScreenOwnerAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        return CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType,CommonAPI::EmptyDeployment>
            >
        	>::callMethodAsync(
        *this,
        "getScreenOwner",
        "",
        (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
        [_callback] (CommonAPI::CallStatus _internalCallStatus, CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType, CommonAPI::EmptyDeployment> _result) {
        	if (_callback)
        		_callback(_internalCallStatus, _result.getValue());
        },
        std::make_tuple(deploy_result));
    }
    /**
     * description: This method is called by HMI to get the current navi owner.           	return:
     *   OwnerType
     */
    void TataAndroidAutoPresPluginDBusProxy::getNaviOwner(CommonAPI::CallStatus &_internalCallStatus, TataAndroidAutoPresPlugin::OwnerType &_result, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType,CommonAPI::EmptyDeployment>
            >
        	>::callMethodWithReply(
        *this,
        "getNaviOwner",
        "",
(_info ? _info : &CommonAPI::DBus::defaultCallInfo),
_internalCallStatus,
deploy_result);
_result = deploy_result.getValue();
}
    std::future<CommonAPI::CallStatus> TataAndroidAutoPresPluginDBusProxy::getNaviOwnerAsync(GetNaviOwnerAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        return CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType,CommonAPI::EmptyDeployment>
            >
        	>::callMethodAsync(
        *this,
        "getNaviOwner",
        "",
        (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
        [_callback] (CommonAPI::CallStatus _internalCallStatus, CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType, CommonAPI::EmptyDeployment> _result) {
        	if (_callback)
        		_callback(_internalCallStatus, _result.getValue());
        },
        std::make_tuple(deploy_result));
    }
    /**
     * description: This method is called by HMI whenever AAP media has to be shown        
     *   	return: true - Success 		    false - Not successful
     */
    void TataAndroidAutoPresPluginDBusProxy::AapShowAaMedia(CommonAPI::CallStatus &_internalCallStatus, uint8_t &_result, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodWithReply(
        *this,
        "AapShowAaMedia",
        "",
(_info ? _info : &CommonAPI::DBus::defaultCallInfo),
_internalCallStatus,
deploy_result);
_result = deploy_result.getValue();
}
    std::future<CommonAPI::CallStatus> TataAndroidAutoPresPluginDBusProxy::AapShowAaMediaAsync(AapShowAaMediaAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        return CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t,CommonAPI::EmptyDeployment>
            >
        	>::callMethodAsync(
        *this,
        "AapShowAaMedia",
        "",
        (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
        [_callback] (CommonAPI::CallStatus _internalCallStatus, CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> _result) {
        	if (_callback)
        		_callback(_internalCallStatus, _result.getValue());
        },
        std::make_tuple(deploy_result));
    }
    /**
     * description: This method is called by HMI to get the current speech owner.          
     *   	return: OwnerType
     */
    void TataAndroidAutoPresPluginDBusProxy::getSpeechOwner(CommonAPI::CallStatus &_internalCallStatus, TataAndroidAutoPresPlugin::OwnerType &_result, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType,CommonAPI::EmptyDeployment>
            >
        	>::callMethodWithReply(
        *this,
        "getSpeechOwner",
        "",
(_info ? _info : &CommonAPI::DBus::defaultCallInfo),
_internalCallStatus,
deploy_result);
_result = deploy_result.getValue();
}
    std::future<CommonAPI::CallStatus> TataAndroidAutoPresPluginDBusProxy::getSpeechOwnerAsync(GetSpeechOwnerAsyncCallback _callback, const CommonAPI::CallInfo *_info) {
        CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType, CommonAPI::EmptyDeployment> deploy_result(static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        return CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType,CommonAPI::EmptyDeployment>
            >
        	>::callMethodAsync(
        *this,
        "getSpeechOwner",
        "",
        (_info ? _info : &CommonAPI::DBus::defaultCallInfo),
        [_callback] (CommonAPI::CallStatus _internalCallStatus, CommonAPI::Deployable<TataAndroidAutoPresPlugin::OwnerType, CommonAPI::EmptyDeployment> _result) {
        	if (_callback)
        		_callback(_internalCallStatus, _result.getValue());
        },
        std::make_tuple(deploy_result));
    }


void TataAndroidAutoPresPluginDBusProxy::getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const {
          ownVersionMajor = 0;
          ownVersionMinor = 1;
      }

      } // namespace androidautopres
      } // namespace harman
      } // namespace com
      } // namespace v0
