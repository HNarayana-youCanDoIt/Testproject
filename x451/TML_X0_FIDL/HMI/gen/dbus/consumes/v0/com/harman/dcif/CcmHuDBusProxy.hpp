/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by DCIF CodeGen Version: R2_v2.1.0
* generated on: Wed Oct 30 12:44:55 IST 2019
*/
#ifndef V0_COM_HARMAN_DCIF_Ccm_Hu_DBUS_PROXY_HPP_
#define V0_COM_HARMAN_DCIF_Ccm_Hu_DBUS_PROXY_HPP_

#include <v0/com/harman/dcif/CcmHuProxyBase.hpp>
#include "v0/com/harman/dcif/CcmHuDBusDeployment.hpp"

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/DBus/DBusAddress.hpp>
#include <CommonAPI/DBus/DBusFactory.hpp>
#include <CommonAPI/DBus/DBusProxy.hpp>
#include <CommonAPI/DBus/DBusAddressTranslator.hpp>
#include <CommonAPI/DBus/DBusAttribute.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

#include <string>

namespace v0 {
namespace com {
namespace harman {
namespace dcif {

class CcmHuDBusProxy
    : virtual public CcmHuProxyBase, 
      virtual public CommonAPI::DBus::DBusProxy {
public:
    CcmHuDBusProxy(
        const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection);

    virtual ~CcmHuDBusProxy() { }

    virtual CcmHuAttribute& getCcmHuAttribute();
    virtual CcmHuUserInterventionFlagAttribute& getCcmHuUserInterventionFlagAttribute();


    virtual void huCcm_req(const ::v0::com::harman::dcif::CcmPresTypes::eHuCcmParam &_huCcm_enum, const uint16_t &_huCcm_value, CommonAPI::CallStatus &_internalCallStatus, const CommonAPI::CallInfo *_info);
    virtual std::future<CommonAPI::CallStatus> huCcm_reqAsync(const ::v0::com::harman::dcif::CcmPresTypes::eHuCcmParam &_huCcm_enum, const uint16_t &_huCcm_value, HuCcm_reqAsyncCallback _callback, const CommonAPI::CallInfo *_info);
    virtual void getCcmInfo(CommonAPI::CallStatus &_internalCallStatus, ::v0::com::harman::dcif::CcmPresTypes::CcmInfo &_ccmInfo, const CommonAPI::CallInfo *_info);
    virtual std::future<CommonAPI::CallStatus> getCcmInfoAsync(GetCcmInfoAsyncCallback _callback, const CommonAPI::CallInfo *_info);


    virtual void getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const;

private:
   
    CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusReadonlyAttribute<CcmHuAttribute, ::v0::com::harman::dcif::CcmPresTypes_::tCcmHuDeployment_t>> ccmHu_;
    CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusReadonlyAttribute<CcmHuUserInterventionFlagAttribute>> ccmHuUserInterventionFlag_;


};

} // namespace dcif
} // namespace harman
} // namespace com
} // namespace v0

#endif // V0_COM_HARMAN_DCIF_Ccm_Hu_DBUS_PROXY_HPP_

