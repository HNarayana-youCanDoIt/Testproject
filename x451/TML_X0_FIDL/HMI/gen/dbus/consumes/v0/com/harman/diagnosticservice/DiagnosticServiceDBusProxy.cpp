/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by DCIF CodeGen Version: R2_v2.1.0
* generated on: Wed Oct 30 12:44:55 IST 2019
*/
/**
 * description: This class implements all DiagnosticService Operations
 * author: Akash Jaiswal
 */
#include <v0/com/harman/diagnosticservice/DiagnosticServiceDBusProxy.hpp>

namespace v0 {
namespace com {
namespace harman {
namespace diagnosticservice {

std::shared_ptr<CommonAPI::DBus::DBusProxy> createDiagnosticServiceDBusProxy(
	const CommonAPI::DBus::DBusAddress &_address,
	const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection) {
	return std::make_shared<DiagnosticServiceDBusProxy>(_address, _connection);
}

INITIALIZER(registerDiagnosticServiceDBusProxy) {
     CommonAPI::DBus::Factory::get()->registerProxyCreateMethod(
		DiagnosticService::getInterface(),
		&createDiagnosticServiceDBusProxy);
}

DiagnosticServiceDBusProxy::DiagnosticServiceDBusProxy(
	const CommonAPI::DBus::DBusAddress &_address,
	const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection)
	:	CommonAPI::DBus::DBusProxy(_address, _connection)
,		diagEngSessionStatus_(*this, "onDiagEngSessionStatusAttributeChanged", "i", "getDiagEngSessionStatusAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		diagSWCStatus_(*this, "onDiagSWCStatusAttributeChanged", "i", "getDiagSWCStatusAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		diagMICStatus_(*this, "onDiagMICStatusAttributeChanged", "i", "getDiagMICStatusAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		diagGPSStatus_(*this, "onDiagGPSStatusAttributeChanged", "i", "getDiagGPSStatusAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		diagAmFmAntennaStatus_(*this, "onDiagAmFmAntennaStatusAttributeChanged", "i", "getDiagAmFmAntennaStatusAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr))
{
}

      DiagnosticServiceDBusProxy::DiagEngSessionStatusAttribute& DiagnosticServiceDBusProxy::getDiagEngSessionStatusAttribute() {
          return diagEngSessionStatus_;
      }
      DiagnosticServiceDBusProxy::DiagSWCStatusAttribute& DiagnosticServiceDBusProxy::getDiagSWCStatusAttribute() {
          return diagSWCStatus_;
      }
      DiagnosticServiceDBusProxy::DiagMICStatusAttribute& DiagnosticServiceDBusProxy::getDiagMICStatusAttribute() {
          return diagMICStatus_;
      }
      DiagnosticServiceDBusProxy::DiagGPSStatusAttribute& DiagnosticServiceDBusProxy::getDiagGPSStatusAttribute() {
          return diagGPSStatus_;
      }
      DiagnosticServiceDBusProxy::DiagAmFmAntennaStatusAttribute& DiagnosticServiceDBusProxy::getDiagAmFmAntennaStatusAttribute() {
          return diagAmFmAntennaStatus_;
      }

    


void DiagnosticServiceDBusProxy::getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const {
          ownVersionMajor = 0;
          ownVersionMinor = 1;
      }

      } // namespace diagnosticservice
      } // namespace harman
      } // namespace com
      } // namespace v0
