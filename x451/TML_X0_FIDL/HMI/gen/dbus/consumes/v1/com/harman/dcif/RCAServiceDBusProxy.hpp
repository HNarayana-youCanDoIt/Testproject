/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by DCIF CodeGen Version: R2_v2.1.0
* generated on: Wed Oct 30 12:44:55 IST 2019
*/
#ifndef V1_COM_HARMAN_DCIF_RCA_Service_DBUS_PROXY_HPP_
#define V1_COM_HARMAN_DCIF_RCA_Service_DBUS_PROXY_HPP_

#include <v1/com/harman/dcif/RCAServiceProxyBase.hpp>
#include "v1/com/harman/dcif/RCAServiceDBusDeployment.hpp"

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/DBus/DBusAddress.hpp>
#include <CommonAPI/DBus/DBusFactory.hpp>
#include <CommonAPI/DBus/DBusProxy.hpp>
#include <CommonAPI/DBus/DBusAddressTranslator.hpp>
#include <CommonAPI/DBus/DBusEvent.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

#include <string>

namespace v1 {
namespace com {
namespace harman {
namespace dcif {

class RCAServiceDBusProxy
    : virtual public RCAServiceProxyBase, 
      virtual public CommonAPI::DBus::DBusProxy {
public:
    RCAServiceDBusProxy(
        const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection);

    virtual ~RCAServiceDBusProxy() { }


    virtual ActionInitiatedFromTSREvent& getActionInitiatedFromTSREvent();

    virtual void getHMIBrowseStatus(CommonAPI::CallStatus &_internalCallStatus, bool &_HMIBrowseStatus, const CommonAPI::CallInfo *_info);
    virtual std::future<CommonAPI::CallStatus> getHMIBrowseStatusAsync(GetHMIBrowseStatusAsyncCallback _callback, const CommonAPI::CallInfo *_info);
    virtual void setHMIBrowseStatus(const bool &_HMIBrowseStatus, CommonAPI::CallStatus &_internalCallStatus, uint8_t &_Ret_status, const CommonAPI::CallInfo *_info);
    virtual std::future<CommonAPI::CallStatus> setHMIBrowseStatusAsync(const bool &_HMIBrowseStatus, SetHMIBrowseStatusAsyncCallback _callback, const CommonAPI::CallInfo *_info);


    virtual void getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const;

private:
   

    CommonAPI::DBus::DBusEvent<ActionInitiatedFromTSREvent, CommonAPI::Deployable<::v1::com::harman::dcif::RCAServiceTypes::eActionInitiated, CommonAPI::EmptyDeployment>, CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment>> actionInitiatedFromTSR_;

};

} // namespace dcif
} // namespace harman
} // namespace com
} // namespace v1

#endif // V1_COM_HARMAN_DCIF_RCA_Service_DBUS_PROXY_HPP_

