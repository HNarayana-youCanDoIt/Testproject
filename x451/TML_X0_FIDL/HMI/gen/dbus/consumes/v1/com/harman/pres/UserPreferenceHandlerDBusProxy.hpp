/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by DCIF CodeGen Version: R2_v2.1.0
* generated on: Wed Oct 30 12:44:55 IST 2019
*/
#ifndef V1_COM_HARMAN_PRES_User_Preference_Handler_DBUS_PROXY_HPP_
#define V1_COM_HARMAN_PRES_User_Preference_Handler_DBUS_PROXY_HPP_

#include <v1/com/harman/pres/UserPreferenceHandlerProxyBase.hpp>
#include "v1/com/harman/pres/UserPreferenceHandlerDBusDeployment.hpp"

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/DBus/DBusAddress.hpp>
#include <CommonAPI/DBus/DBusFactory.hpp>
#include <CommonAPI/DBus/DBusProxy.hpp>
#include <CommonAPI/DBus/DBusAddressTranslator.hpp>
#include <CommonAPI/DBus/DBusAttribute.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

#include <string>

namespace v1 {
namespace com {
namespace harman {
namespace pres {

class UserPreferenceHandlerDBusProxy
    : virtual public UserPreferenceHandlerProxyBase, 
      virtual public CommonAPI::DBus::DBusProxy {
public:
    UserPreferenceHandlerDBusProxy(
        const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection);

    virtual ~UserPreferenceHandlerDBusProxy() { }

    virtual UserPrefByDevTypeAttribute& getUserPrefByDevTypeAttribute();
    virtual UserPrefByDevNameAttribute& getUserPrefByDevNameAttribute();


    /**
     * description: This method to be called to set user preference by device type. 		As
     *   confirmation to this request, attribute "userPrefByDevType" gets updated. 	
     *   		parameters are explained in devprestypes FIDL.
     */
    virtual void setUserPrefByDevType(const ::v1::com::harman::pres::devprestypes::eDeviceType &_devType, const ::v1::com::harman::pres::devprestypes::eModeName &_mode, CommonAPI::CallStatus &_internalCallStatus, ::v1::com::harman::pres::devprestypes::eAcknowledgement &_ackStatus, const CommonAPI::CallInfo *_info);
    virtual std::future<CommonAPI::CallStatus> setUserPrefByDevTypeAsync(const ::v1::com::harman::pres::devprestypes::eDeviceType &_devType, const ::v1::com::harman::pres::devprestypes::eModeName &_mode, SetUserPrefByDevTypeAsyncCallback _callback, const CommonAPI::CallInfo *_info);
    /**
     * description: This method to be called to set user preference by device name. 		As
     *   confirmation to this request, attribute "userPrefByDevName" gets updated. 	
     *   		parameters are explained in devprestypes FIDL.
     */
    virtual void setUserPrefByDevName(const uint8_t &_Id, const ::v1::com::harman::pres::devprestypes::eModeName &_mode, CommonAPI::CallStatus &_internalCallStatus, ::v1::com::harman::pres::devprestypes::eAcknowledgement &_ackStatus, const CommonAPI::CallInfo *_info);
    virtual std::future<CommonAPI::CallStatus> setUserPrefByDevNameAsync(const uint8_t &_Id, const ::v1::com::harman::pres::devprestypes::eModeName &_mode, SetUserPrefByDevNameAsyncCallback _callback, const CommonAPI::CallInfo *_info);
    /**
     * description: This method to be called to clear all user preferences  		including both by
     *   device name & by device type. 	 		parameters are explained in devprestypes
     *   FIDL.
     */
    virtual void clearAllPreferences(CommonAPI::CallStatus &_internalCallStatus, ::v1::com::harman::pres::devprestypes::eRequestStatus &_reqStatus, const CommonAPI::CallInfo *_info);
    virtual std::future<CommonAPI::CallStatus> clearAllPreferencesAsync(ClearAllPreferencesAsyncCallback _callback, const CommonAPI::CallInfo *_info);


    virtual void getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const;

private:
   
    CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusReadonlyAttribute<UserPrefByDevTypeAttribute, CommonAPI::DBus::ArrayDeployment<::v1::com::harman::pres::devprestypes_::sPrefByDevTypeDeployment_t>>> userPrefByDevType_;
    CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusReadonlyAttribute<UserPrefByDevNameAttribute, CommonAPI::DBus::ArrayDeployment<::v1::com::harman::pres::devprestypes_::sPrefByDevNameDeployment_t>>> userPrefByDevName_;


};

} // namespace pres
} // namespace harman
} // namespace com
} // namespace v1

#endif // V1_COM_HARMAN_PRES_User_Preference_Handler_DBUS_PROXY_HPP_

