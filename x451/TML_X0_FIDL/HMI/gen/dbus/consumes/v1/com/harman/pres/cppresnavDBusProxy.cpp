/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by DCIF CodeGen Version: R2_v2.1.0
* generated on: Wed Oct 30 12:44:55 IST 2019
*/
#include <v1/com/harman/pres/cppresnavDBusProxy.hpp>

namespace v1 {
namespace com {
namespace harman {
namespace pres {

std::shared_ptr<CommonAPI::DBus::DBusProxy> createcppresnavDBusProxy(
	const CommonAPI::DBus::DBusAddress &_address,
	const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection) {
	return std::make_shared<cppresnavDBusProxy>(_address, _connection);
}

INITIALIZER(registercppresnavDBusProxy) {
     CommonAPI::DBus::Factory::get()->registerProxyCreateMethod(
		cppresnav::getInterface(),
		&createcppresnavDBusProxy);
}

cppresnavDBusProxy::cppresnavDBusProxy(
	const CommonAPI::DBus::DBusAddress &_address,
	const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection)
	:	CommonAPI::DBus::DBusProxy(_address, _connection)
,		naviSessionStatus_(*this, "onNaviSessionStatusAttributeChanged", "b", "getNaviSessionStatusAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr))
,		naviRouteGuidanceManeuverInfoUpdate_(*this, "naviRouteGuidanceManeuverInfoUpdate", "(asqsisusiiiann)", std::make_tuple(static_cast<::v2::com::harman::pres::cpprestypes_::sNaviRouteGuidanceManeuverInfoUpdateDeployment_t*>(nullptr))),
		naviRouteGuidanceUpdate_(*this, "naviRouteGuidanceUpdate", "(asiissttusiusiaqqy)", std::make_tuple(static_cast<::v2::com::harman::pres::cpprestypes_::sNaviRouteGuidanceUpdateDeployment_t*>(nullptr)))
{
}

      cppresnavDBusProxy::NaviSessionStatusAttribute& cppresnavDBusProxy::getNaviSessionStatusAttribute() {
          return naviSessionStatus_;
      }

cppresnavDBusProxy::NaviRouteGuidanceManeuverInfoUpdateEvent& cppresnavDBusProxy::getNaviRouteGuidanceManeuverInfoUpdateEvent() {
    return naviRouteGuidanceManeuverInfoUpdate_;
}
cppresnavDBusProxy::NaviRouteGuidanceUpdateEvent& cppresnavDBusProxy::getNaviRouteGuidanceUpdateEvent() {
    return naviRouteGuidanceUpdate_;
}
    


void cppresnavDBusProxy::getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const {
          ownVersionMajor = 1;
          ownVersionMinor = 1;
      }

      } // namespace pres
      } // namespace harman
      } // namespace com
      } // namespace v1
